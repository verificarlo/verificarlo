# *******************************************************************************
#                                                                              *
#  This file is part of Verificarlo.                                           *
#                                                                              *
#  Copyright (c) 2015-2021                                                     *
#     Verificarlo contributors                                                 *
#     Universite de Versailles St-Quentin-en-Yvelines                          *
#     CMLA, Ecole Normale Superieure de Cachan                                 *
#                                                                              *
#  Verificarlo is free software: you can redistribute it and/or modify         *
#  it under the terms of the GNU General Public License as published by        *
#  the Free Software Foundation, either version 3 of the License, or           *
#  (at your option) any later version.                                         *
#                                                                              *
#  Verificarlo is distributed in the hope that it will be useful,              *
#  but WITHOUT ANY WARRANTY; without even the implied warranty of              *
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               *
#  GNU General Public License for more details.                                *
#                                                                              *
#  You should have received a copy of the GNU General Public License           *
#  along with Verificarlo.  If not, see <http://www.gnu.org/licenses/>.        *
#                                                                              *
# *******************************************************************************


target_specific_options_x86 = set([
    "-O0",
    "-O1",
    "-O2",
    "-O3",
    "-O4",
    "-Ofast",
    "-Os",
    "-m128bit-long-double",
    "-m16",
    "-m32",
    "-m3dnow",
    "-m3dnowa",
    "-m64",
    "-m80387",
    "-m8bit-idiv",
    "-m96bit-long-double",
    "-mabi=",
    "-mabm",
    "-maccumulate-outgoing-args",
    "-maddress-mode=",
    "-madx",
    "-maes",
    "-malign-data=",
    "-malign-double",
    "-malign-functions=",
    "-malign-jumps=",
    "-malign-loops=",
    "-malign-stringops",
    "-mandroid",
    "-march=",
    "-masm=",
    "-mavx",
    "-mavx2",
    "-mavx256-split-unaligned-load",
    "-mavx256-split-unaligned-store",
    "-mavx5124fmaps",
    "-mavx5124vnniw",
    "-mavx512bitalg",
    "-mavx512bw",
    "-mavx512cd",
    "-mavx512dq",
    "-mavx512er",
    "-mavx512f",
    "-mavx512ifma",
    "-mavx512pf",
    "-mavx512vbmi",
    "-mavx512vbmi2",
    "-mavx512vl",
    "-mavx512vnni",
    "-mavx512vpopcntdq",
    "-mbionic",
    "-mbmi",
    "-mbmi2",
    "-mbranch-cost=",
    "-mcall-ms2sysv-xlogues",
    "-mcet-switch",
    "-mcld",
    "-mcldemote",
    "-mclflushopt",
    "-mclwb",
    "-mclzero",
    "-mcmodel=",
    "-mcpu=",
    "-mcrc32",
    "-mcx16",
    "-mdispatch-scheduler",
    "-mdump-tune-features",
    "-mf16c",
    "-mfancy-math-387",
    "-mfentry",
    "-mfentry-name=",
    "-mfentry-section=",
    "-mfma",
    "-mfma4",
    "-mforce-drap",
    "-mforce-indirect-call",
    "-mfp-ret-in-387",
    "-mfpmath=",
    "-mfsgsbase",
    "-mfunction-return=",
    "-mfused-madd",
    "-mfxsr",
    "-mgeneral-regs-only",
    "-mgfni",
    "-mglibc",
    "-mhard-float",
    "-mhle",
    "-miamcu",
    "-mieee-fp",
    "-mincoming-stack-boundary=",
    "-mindirect-branch-register",
    "-mindirect-branch=",
    "-minline-all-stringops",
    "-minline-stringops-dynamically",
    "-minstrument-return=",
    "-mintel-syntax",
    "-mlarge-data-threshold=<number>",
    "-mlong-double-128",
    "-mlong-double-64",
    "-mlong-double-80",
    "-mlwp",
    "-mlzcnt",
    "-mmanual-endbr",
    "-mmemcpy-strategy=",
    "-mmemset-strategy=",
    "-mmitigate-rop",
    "-mmmx",
    "-mmovbe",
    "-mmovdir64b",
    "-mmovdiri",
    "-mmpx",
    "-mms-bitfields",
    "-mmusl",
    "-mmwaitx",
    "-mno-align-stringops",
    "-mno-default",
    "-mno-fancy-math-387",
    "-mno-push-args",
    "-mno-red-zone",
    "-mno-sse4",
    "-mnop-mcount",
    "-momit-leaf-frame-pointer",
    "-mpc32",
    "-mpc64",
    "-mpc80",
    "-mpclmul",
    "-mpcommit",
    "-mpconfig",
    "-mpku",
    "-mpopcnt",
    "-mprefer-avx128",
    "-mprefer-vector-width=",
    "-mpreferred-stack-boundary=",
    "-mprefetchwt1",
    "-mprfchw",
    "-mptwrite",
    "-mpush-args",
    "-mrdpid",
    "-mrdrnd",
    "-mrdseed",
    "-mrecip",
    "-mrecip=",
    "-mrecord-mcount",
    "-mrecord-return",
    "-mred-zone",
    "-mregparm=",
    "-mrtd",
    "-mrtm",
    "-msahf",
    "-msgx",
    "-msha",
    "-mshstk",
    "-mskip-rax-setup",
    "-msoft-float",
    "-msse",
    "-msse2",
    "-msse2avx",
    "-msse3",
    "-msse4",
    "-msse4.1",
    "-msse4.2",
    "-msse4a",
    "-msse5",
    "-msseregparm",
    "-mssse3",
    "-mstack-arg-probe",
    "-mstack-protector-guard-offset=",
    "-mstack-protector-guard-reg=",
    "-mstack-protector-guard-symbol=",
    "-mstack-protector-guard=",
    "-mstackrealign",
    "-mstringop-strategy=",
    "-mstv",
    "-mtbm",
    "-mtls-dialect=",
    "-mtls-direct-seg-refs",
    "-mtune-ctrl=",
    "-mtune=",
    "-muclibc",
    "-mvaes",
    "-mveclibabi=",
    "-mvect8-ret-in-mem",
    "-mvpclmulqdq",
    "-mvzeroupper",
    "-mwaitpkg",
    "-mwbnoinvd",
    "-mx32",
    "-mxop",
    "-mxsave",
    "-mxsavec",
    "-mxsaveopt",
    "-mxsaves"
])


def get_target_specific_options(options, as_string=False):
    target_options = list()
    for option in options.split():
        (flag, equal, _) = option.replace("'", ' ').partition('=')
        if f'{flag.strip()}{equal.strip()}' in target_specific_options_x86:
            target_options.append(option)
    return ' '.join(target_options) + ' ' if as_string else target_options
